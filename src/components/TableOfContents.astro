---
// TableOfContents.astro
---

<div id="table-of-contents" class="toc-container">
  <div class="toc-header">
    <h3>目錄</h3>
  </div>
  <nav class="toc-nav">
    <ul id="toc-list" class="toc-list">
      <!-- 目錄項目將由 JavaScript 動態生成 -->
    </ul>
  </nav>
</div>

<style>
  .toc-container {
    position: fixed;
    top: 50%;
    right: 2rem;
    transform: translateY(-50%);
    width: 250px;
    max-height: 70vh;
    background: var(--theme-bg-secondary, #f8f9fa);
    border: 1px solid var(--theme-border, #e9ecef);
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    z-index: 100;
    overflow: hidden;
    transition: all 0.3s ease;
    opacity: 0;
    visibility: hidden;
  }

  .toc-container.visible {
    opacity: 1;
    visibility: visible;
  }

  .toc-header {
    padding: 1rem;
    background: var(--theme-bg-primary, #ffffff);
    border-bottom: 1px solid var(--theme-border, #e9ecef);
    margin: 0;
  }

  .toc-header h3 {
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    color: var(--theme-text-primary, #333);
  }

  .toc-nav {
    max-height: calc(70vh - 60px);
    overflow-y: auto;
    padding: 0.5rem 0;
  }

  .toc-list {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .toc-list li {
    margin: 0;
  }

  .toc-list a {
    display: block;
    padding: 0.5rem 1rem;
    color: var(--theme-text-secondary, #666);
    text-decoration: none;
    font-size: 0.875rem;
    line-height: 1.4;
    border-left: 3px solid transparent;
    transition: all 0.2s ease;
  }

  .toc-list a:hover {
    color: var(--theme-text-primary, #333);
    background: var(--theme-bg-hover, #f1f3f4);
    border-left-color: var(--theme-accent, #0066cc);
  }

  .toc-list a.active {
    color: var(--theme-accent, #0066cc);
    background: var(--theme-bg-accent, #e3f2fd);
    border-left-color: var(--theme-accent, #0066cc);
    font-weight: 500;
  }

  /* 不同層級的縮進 */
  .toc-list .toc-h2 {
    padding-left: 1rem;
  }

  .toc-list .toc-h3 {
    padding-left: 2rem;
    font-size: 0.8rem;
  }

  /* 響應式設計 */
  @media (max-width: 1200px) {
    .toc-container {
      display: none;
    }
  }

  /* 滾動條樣式 */
  .toc-nav::-webkit-scrollbar {
    width: 4px;
  }

  .toc-nav::-webkit-scrollbar-track {
    background: transparent;
  }

  .toc-nav::-webkit-scrollbar-thumb {
    background: var(--theme-border, #e9ecef);
    border-radius: 2px;
  }

  .toc-nav::-webkit-scrollbar-thumb:hover {
    background: var(--theme-text-secondary, #666);
  }
</style>

<script>
  // 等待 DOM 加載完成
  document.addEventListener('DOMContentLoaded', function() {
    const tocContainer = document.getElementById('table-of-contents');
    const tocList = document.getElementById('toc-list');
    
    if (!tocContainer || !tocList) return;

    // 查找文章中的標題
    const headings = document.querySelectorAll('.prose h1, .prose h2, .prose h3');
    
    if (headings.length === 0) {
      return; // 如果沒有標題，不顯示目錄
    }

    // 生成目錄
    function generateTOC() {
      const tocItems = [];
      
      headings.forEach((heading, index) => {
        // 為標題添加 ID（如果沒有的話）
        if (!heading.id) {
          heading.id = `heading-${index}`;
        }
        
        const level = heading.tagName.toLowerCase();
        const text = heading.textContent.trim();
        const id = heading.id;
        
        tocItems.push({
          level,
          text,
          id,
          element: heading
        });
      });
      
      return tocItems;
    }

    // 渲染目錄
    function renderTOC(items) {
      const listItems = items.map(item => {
        return `
          <li>
            <a href="#${item.id}" class="toc-${item.level}" data-target="${item.id}">
              ${item.text}
            </a>
          </li>
        `;
      }).join('');
      
      tocList.innerHTML = listItems;
    }

    // 平滑滾動到目標
    function smoothScrollTo(target) {
      const element = document.getElementById(target);
      if (element) {
        const headerHeight = 80; // 考慮固定頭部的高度
        const elementPosition = element.offsetTop - headerHeight;
        
        window.scrollTo({
          top: elementPosition,
          behavior: 'smooth'
        });
      }
    }

    // 更新活動狀態
    function updateActiveState() {
      const scrollPosition = window.scrollY + 100;
      const tocLinks = tocList.querySelectorAll('a');
      
      let activeLink = null;
      
      headings.forEach((heading) => {
        const headingTop = heading.offsetTop;
        const headingBottom = headingTop + heading.offsetHeight;
        
        if (scrollPosition >= headingTop && scrollPosition < headingBottom) {
          activeLink = tocList.querySelector(`a[data-target="${heading.id}"]`);
        }
      });
      
      // 移除所有活動狀態
      tocLinks.forEach(link => link.classList.remove('active'));
      
      // 添加活動狀態
      if (activeLink) {
        activeLink.classList.add('active');
      }
    }

    // 初始化目錄
    const tocItems = generateTOC();
    renderTOC(tocItems);
    
    // 顯示目錄容器
    tocContainer.classList.add('visible');

    // 綁定點擊事件
    tocList.addEventListener('click', function(e) {
      e.preventDefault();
      const link = e.target.closest('a');
      if (link) {
        const target = link.getAttribute('data-target');
        smoothScrollTo(target);
      }
    });

    // 監聽滾動事件
    let ticking = false;
    function onScroll() {
      if (!ticking) {
        requestAnimationFrame(() => {
          updateActiveState();
          ticking = false;
        });
        ticking = true;
      }
    }
    
    window.addEventListener('scroll', onScroll);
    
    // 初始更新活動狀態
    updateActiveState();
  });
</script>