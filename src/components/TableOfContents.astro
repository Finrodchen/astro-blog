---
// TableOfContents.astro
---

<div id="table-of-contents" class="toc-container">
  <div class="toc-header">
    <h3>📋 文章目錄</h3>
  </div>
  <nav class="toc-nav">
    <ul id="toc-list" class="toc-list">
      <!-- 目錄項目將由 JavaScript 動態生成 -->
    </ul>
  </nav>
</div>

<style>
  .toc-container {
    margin: 2rem 0;
    background: var(--theme-surface);
    border: 1px solid var(--theme-border);
    border-radius: 12px;
    box-shadow: var(--theme-shadow-sm);
    overflow: hidden;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  .toc-container.visible {
    opacity: 1;
    visibility: visible;
  }

  .toc-header {
    background: var(--theme-bg-secondary);
    padding: 1rem 1.5rem;
    border-bottom: 1px solid var(--theme-border);
  }

  .toc-header h3 {
    margin: 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--theme-text-primary);
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .toc-nav {
    padding: 1.5rem;
  }

  .toc-list {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .toc-list li {
    margin: 0;
    padding: 0;
  }

  .toc-list a {
    display: block;
    padding: 0.75rem 1rem;
    color: var(--theme-text-secondary);
    text-decoration: none;
    border-radius: 8px;
    border-left: 3px solid transparent;
    transition: all 0.2s ease;
    font-size: 0.95rem;
    line-height: 1.5;
    margin-bottom: 0.5rem;
    position: relative;
  }

  .toc-list a:hover {
    background: var(--theme-bg-secondary);
    color: var(--theme-text-primary);
    border-left-color: var(--theme-primary);
    transform: translateX(2px);
  }

  .toc-list a.active {
    color: var(--theme-primary);
    background: rgba(var(--theme-primary-rgb), 0.1);
    border-left-color: var(--theme-primary);
    font-weight: 500;
  }

  .toc-list a.active::before {
    content: '▶';
    position: absolute;
    left: 0.5rem;
    color: var(--theme-primary);
    font-size: 0.8rem;
  }

  /* h2 標題樣式 */
  .toc-list .toc-h2 {
    padding-left: 1.5rem;
    font-size: 0.95rem;
  }

  /* 響應式設計 */
  @media (max-width: 768px) {
    .toc-container {
      margin: 1.5rem 0;
    }
    
    .toc-header {
      padding: 0.75rem 1rem;
    }
    
    .toc-nav {
      padding: 1rem;
    }
    
    .toc-list a {
      padding: 0.5rem 0.75rem;
      font-size: 0.9rem;
    }
    
    .toc-list .toc-h2 {
      padding-left: 1rem;
    }
  }

  /* 空狀態 */
  .toc-empty {
    text-align: center;
    padding: 2rem;
    color: var(--theme-text-muted);
    font-style: italic;
  }
</style>

<script>
  // 初始化目錄功能
  function initTableOfContents() {
    const tocContainer = document.getElementById('table-of-contents');
    const tocList = document.getElementById('toc-list');
    
    if (!tocContainer || !tocList) {
      return;
    }

    // 查找文章中的標題 - 只選擇 h2
    const headings = document.querySelectorAll('h2, .prose h2, article h2');
    
    if (headings.length === 0) {
      return; // 如果沒有標題，不顯示目錄
    }

    // 生成目錄
    function generateTOC() {
      const tocItems = [];
      
      headings.forEach((heading, index) => {
        // 為標題添加 ID（如果沒有的話）
        if (!heading.id) {
          heading.id = `heading-${index}`;
        }
        
        const level = heading.tagName.toLowerCase();
        const text = heading.textContent.trim();
        const id = heading.id;
        
        tocItems.push({
          level,
          text,
          id,
          element: heading
        });
      });
      
      return tocItems;
    }

    // 渲染目錄
    function renderTOC(items) {
      const listItems = items.map(item => {
        return `
          <li>
            <a href="#${item.id}" class="toc-${item.level}" data-target="${item.id}">
              ${item.text}
            </a>
          </li>
        `;
      }).join('');
      
      tocList.innerHTML = listItems;
    }

    // 平滑滾動到目標
    function smoothScrollTo(target) {
      const element = document.getElementById(target);
      if (element) {
        // 使用更精確的計算方法
        const rect = element.getBoundingClientRect();
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        const elementTop = rect.top + scrollTop;
        const offset = 100; // 固定偏移量
        
        window.scrollTo({
          top: Math.max(0, elementTop - offset),
          behavior: 'smooth'
        });
      }
    }

    // 更新活動狀態（簡化版，僅在點擊時更新）
    function updateActiveState(targetId) {
      const tocLinks = tocList.querySelectorAll('a');
      
      // 移除所有活動狀態
      tocLinks.forEach(link => link.classList.remove('active'));
      
      // 添加活動狀態到點擊的項目
      if (targetId) {
        const activeLink = tocList.querySelector(`a[data-target="${targetId}"]`);
        if (activeLink) {
          activeLink.classList.add('active');
        }
      }
    }

    // 初始化目錄
    const tocItems = generateTOC();
    renderTOC(tocItems);
    
    // 顯示目錄容器
    tocContainer.classList.add('visible');

    // 綁定點擊事件
    tocList.addEventListener('click', function(e) {
      e.preventDefault();
      const link = e.target.closest('a');
      if (link) {
        const target = link.getAttribute('data-target');
        smoothScrollTo(target);
        updateActiveState(target);
      }
    });
  }

  // 多種方式確保腳本執行
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initTableOfContents);
  } else {
    // DOM 已經加載完成
    initTableOfContents();
  }
  
  // 備用方案：頁面完全加載後再次嘗試
  window.addEventListener('load', function() {
    setTimeout(initTableOfContents, 100);
  });
  
  // Astro 頁面切換後重新初始化
  document.addEventListener('astro:page-load', initTableOfContents);
</script>